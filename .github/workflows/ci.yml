name: resume_challenge

on:
  push:
    paths:
      - 'infrastructure/**'
      - 'lambda/**'
      - 'website/**'
jobs:
  changes:
    runs-on: ubuntu-latest
    name: Check Changes
    if: ${{ github.event_name == 'push' }}
    outputs:
      infrastructure: ${{ steps.filter.outputs.infrastructure }}
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          backend:
            - 'lambda/**'
          frontend:
            - 'website/**'
          infrastructure:
            - 'infrastructure/**'
  infrastructure:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.infrastructure == 'true' }}
    name: Deploy Infrastructure
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7
      - name: Terraform Init
        run: terraform init infrastructure/
      - name: Terraform Apply
        run: terraform apply -auto-approve infrastructure/
  # frontend:
  #   runs-on: ubuntu-latest
  #   needs: changes
  #   if: ${{ needs.changes.outputs.frontend == 'true' }}
  #   name: Deploy Frontend
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4
  #     - name: Setup AWS CLI
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1
  #     - name: Deploy to S3
  #       run: aws s3 sync website/** s3://your-frontend-bucket --delete